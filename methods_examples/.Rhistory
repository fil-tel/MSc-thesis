my_tracts <- tract_gr %>% as.data.frame()
nodes <- my_tracts$name
my_tracts <- my_tracts %>% select(start, end)
# convert to matrix
tract_mat <- my_tracts %>% as.matrix()
# get vector of starts and ends
starts_ends <- tract_mat %>% c() %>% unique() %>% sort()
tract_mat_new <- apply(tract_mat, MARGIN = 1, function(row) starts_ends %in% row %>% as.numeric) %>% t
colnames(tract_mat_new) <- starts_ends
# matrix multiplication
adj_mat <- tract_mat_new%*%t(tract_mat_new)
# since I do not want the link with itself (2) I set all the values = to 2 to 0
adj_mat[lower.tri(adj_mat, diag = TRUE)] <- 0
diag(adj_mat) <- 0
colnames(adj_mat) <- rownames(adj_mat) <- nodes
adj_mat
}
adj_mat <- get_adj_mat(tracts_gr)
get_adj_mat_ex <- function(tract_gr){
# extract the tracts intersecting with that genomic location (pos)
my_tracts <- tract_gr %>% as.data.frame()
nodes <- my_tracts$name
my_tracts <- my_tracts %>% select(start, end)
# convert to matrix
tract_mat <- my_tracts %>% as.matrix()
# get vector of starts and ends
starts_ends <- tract_mat %>% c() %>% unique() %>% sort()
tract_mat_new <- apply(tract_mat, MARGIN = 1, function(row) starts_ends %in% row %>% as.numeric) %>% t
colnames(tract_mat_new) <- starts_ends
# matrix multiplication
adj_mat <- tract_mat_new%*%t(tract_mat_new)
# since I do not want the link with itself (2) I set all the values = to 2 to 0
adj_mat[lower.tri(adj_mat, diag = TRUE)] <- 0
diag(adj_mat) <- 0
colnames(adj_mat) <- rownames(adj_mat) <- nodes
adj_mat
}
adj_mat <- get_adj_mat_ex(tracts_gr)
adj_mat
graph <- graph_from_adjacency_matrix(adj_mat)
library(igraph)
graph <- graph_from_adjacency_matrix(adj_mat)
plot(graph)
cowplot::plot_grid()
?cowplot::plot_grid
p_sites <- plot_sites(bin_mat_long = bin_sites_long)
p_site_grid <- cowplot::plot_grid(plotlist = p_sites, labels = "AUTO")
ggsave(plot = p_site_grid, filename = "figs/site_grid.png", width = 12, height = 5, units = "in")
source("~/UCPH/thesis/methods_examples/matrix_representation.R", echo = TRUE)
cowplot::plot_grid(p_site_grid, p_sub_grid)
cowplot::plot_grid(p_site_grid, p_sub_grid, align = "v")
cowplot::plot_grid(p_site_grid, p_sub_grid, align = "h")
cowplot::plot_grid(p_site_grid, p_sub_grid, ncol = 1)
cowplot::plot_grid(plotlist = list(p_sites, p_subset, p_unique, p_windows), ncol = 2)
cowplot::plot_grid(plotlist = c(p_sites, p_subset, p_unique, p_windows), ncol = 2)
cowplot::plot_grid(plotlist = c(p_sites, p_subset, p_unique, p_windows), ncol = 2, labels = "AUTO")
grid_all <- cowplot::plot_grid(plotlist = c(p_unique, p_windows, p_subset, p_sites), ncol = 2, labels = "AUTO")
ggsave(plot = grid_all, filename = "figs/grid_all.png", width = 12, height = 20, units = "in")
plot_sites <- function(bin_mat_long){
tick_positions <- sort(unique(c(start(tracts_gr), end(tracts_gr))))
bin_levels <- unique(bin_mat_long$bin)
bin_colors <- setNames(RColorBrewer::brewer.pal(length(bin_levels), "Set1"), bin_levels)
bin_colors_0 <- c("0" = "white", bin_colors)
alpha_v <- c("0" = 1, setNames(rep(0.2, length(bin_levels)), bin_levels))
p2 <- ggplot(bin_mat_long) +
geom_tile(color = "grey80", aes(x = bin, y = name, fill = fill_group, alpha = fill_group)) +
scale_alpha_manual(values = alpha_v)+
geom_text(aes(x = bin, y = name, label = value), color = "black", size = 4) +
scale_fill_manual(values = bin_colors_0) +
labs(x = "Recombination sites coordinates", y = NULL) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
panel.grid = element_blank()
)+ggtitle("Recombination sites approach")
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
theme(panel.grid = element_blank()) +
ggtitle("Example of introgressed tracts on chromosomes") +
geom_vline(xintercept = tick_positions, color=bin_colors, lty=2, alpha = 0.7) +
guides(fill = "none")-> p1
list(p1, p2)
}
p_sites <- plot_sites(bin_mat_long = bin_sites_long)
p_site_grid <- cowplot::plot_grid(plotlist = p_sites, labels = "AUTO")
p_site_grid
source("~/UCPH/thesis/methods_examples/matrix_representation.R", echo = TRUE)
library(GenomicRanges)
library(tidyverse)
library(plyranges)
library(igraph)
source("utils.R")
if(!dir.exists("figs")) dir.create("figs")
tracts_gr <- GRanges(seqnames = "chr1", ranges = IRanges(start = c(100, 100, 130, 90, 90, 50), end = c(150, 150, 150, 170, 140, 80)))
mcols(tracts_gr)$name <- paste0("IND_", 1:length(tracts_gr))
mcols(tracts_gr)$col <- as.factor(c(1,1,2,3,4,5))
get_adj_mat_ex <- function(tract_gr){
# extract the tracts intersecting with that genomic location (pos)
my_tracts <- tract_gr %>% as.data.frame()
nodes <- my_tracts$name
my_tracts <- my_tracts %>% select(start, end)
# convert to matrix
tract_mat <- my_tracts %>% as.matrix()
# get vector of starts and ends
starts_ends <- tract_mat %>% c() %>% unique() %>% sort()
tract_mat_new <- apply(tract_mat, MARGIN = 1, function(row) starts_ends %in% row %>% as.numeric) %>% t
colnames(tract_mat_new) <- starts_ends
# matrix multiplication
adj_mat <- tract_mat_new%*%t(tract_mat_new)
# since I do not want the link with itself (2) I set all the values = to 2 to 0
adj_mat[lower.tri(adj_mat, diag = TRUE)] <- 0
diag(adj_mat) <- 0
colnames(adj_mat) <- rownames(adj_mat) <- nodes
adj_mat
}
adj_mat <- get_adj_mat_ex(tracts_gr)
graph <- graph_from_adjacency_matrix(adj_mat)
tracts_gr %>% as_tibble %>%
ggplot(aes(x = start, xend = end, y = name, yend = name, colour = col)) +
geom_segment(linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "position [bp]", y = "samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes") -> p1
p1
tracts_gr <- GRanges(seqnames = "chr1", ranges = IRanges(start = c(100, 100, 130, 90, 90, 50), end = c(150, 150, 150, 170, 140, 80)))
mcols(tracts_gr)$name <- paste0("IND_", 1:length(tracts_gr))
get_adj_mat_ex <- function(tract_gr){
# extract the tracts intersecting with that genomic location (pos)
my_tracts <- tract_gr %>% as.data.frame()
nodes <- my_tracts$name
my_tracts <- my_tracts %>% select(start, end)
# convert to matrix
tract_mat <- my_tracts %>% as.matrix()
# get vector of starts and ends
starts_ends <- tract_mat %>% c() %>% unique() %>% sort()
tract_mat_new <- apply(tract_mat, MARGIN = 1, function(row) starts_ends %in% row %>% as.numeric) %>% t
colnames(tract_mat_new) <- starts_ends
# matrix multiplication
adj_mat <- tract_mat_new%*%t(tract_mat_new)
# since I do not want the link with itself (2) I set all the values = to 2 to 0
adj_mat[lower.tri(adj_mat, diag = TRUE)] <- 0
diag(adj_mat) <- 0
colnames(adj_mat) <- rownames(adj_mat) <- nodes
adj_mat
}
tracts_gr %>% as_tibble %>%
ggplot(aes(x = start, xend = end, y = name, yend = name, colour = name)) +
geom_segment(linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "position [bp]", y = "samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes") -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot(aes(x = start, xend = end, y = name, yend = name, colour = name)) +
geom_segment(linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes") -> p1
p1
p_ind <- setNames(RColorBrewer::brewer.pal(length(tracts_gr), "Set1"), tracts_gr$name)
tracts_gr %>% as_tibble %>%
ggplot(aes(x = start, xend = end, y = name, yend = name, colour = name)) +
geom_segment(linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind)-> p1
p1
V(graph)
V(graph)$color <- p_ind
plot(graph)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 2)
plot(graph, edge.arrow.size = 1, vertex.label.cex = 2)
graph <- graph_from_adjacency_matrix(adj_mat, mode = "undirected")
?graph_from_adjacency_matrix
adj_mat <- get_adj_mat_ex(tracts_gr)
graph <- graph_from_adjacency_matrix(adj_mat, mode = "undirected")
plot(graph)
V(graph)$color <- p_ind
plot(graph)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 2)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 1)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 2)
?igraph::plot.graph
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 2, size=10)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 2, size=20)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 2, size=30)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 2, size=45)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 2, vertex.size=45)
plot(graph, edge.arrow.size = 0.5, vertex.label.cex = 1, vertex.size=30)
plot(graph, edge.arrow.size = 10, vertex.label.cex = 1, vertex.size=30)
plot(graph, edge.size = 10, vertex.label.cex = 1, vertex.size=30)
plot(graph, edge.size = 20, vertex.label.cex = 1, vertex.size=30)
plot(graph, edge.size = 30, vertex.label.cex = 1, vertex.size=30)
plot(graph, edge.size = 50, vertex.label.cex = 1, vertex.size=30)
plot(graph, edge.width = 50, vertex.label.cex = 1, vertex.size=30)
plot(graph, edge.width = 5, vertex.label.cex = 1, vertex.size=30)
plot(graph, edge.width = 3, vertex.label.cex = 1, vertex.size=30)
png("my_graph.png", height = 1000, width = 1000, units = "px")
plot(graph, edge.width = 3, vertex.label.cex = 1, vertex.size=30)
dev.off()
png("figs/my_graph.png", height = 1000, width = 1000, units = "px")
plot(graph, edge.width = 3, vertex.label.cex = 1, vertex.size=30)
dev.off()
adj_mat
links <- data.frame(ystart = c("IND_1", "IND_1", "IND_1", "IND_2", "IND_4"),
yend = c("IND_2", "IND_2", "IND_3", "IND_3", "IND_5"),
xstart=c(100, 150, 150, 150, 90),
xend = c(100, 150, 150, 150, 90))
tracts_gr %>% as_tibble %>%
ggplot(aes(x = start, xend = end, y = name, yend = name, colour = name)) +
geom_segment(linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend)) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot(aes(x = start, xend = end, y = name, yend = name, colour = name)) +
geom_segment(linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend)) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend)) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend), angle = 20) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend), angle = 90) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend), angle = 180) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend), angle = 270) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend), angle = 200) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend), angle = 360) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend), curvature = 0.8) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links,
aes(x = xstart, y = ystart, xend = xend, yend = yend), curvature = -0.8) -> p1
p1
ggsave(plot = p1, filename = "figs/edges_on_plot.png")
links_1 <- data.frame(ystart = c("IND_1", "IND_1", "IND_2"),
yend = c("IND_2", "IND_3", "IND_3"),
xstart=c( 150, 150, 150),
xend = c( 150, 150, 150))
links_2 <- data.frame(ystart = c("IND_1", "IND_4"),
yend = c("IND_2", "IND_5"),
xstart=c(100, 90),
xend = c(100, 90))
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links_1,
aes(x = xstart, y = ystart, xend = xend, yend = yend), curvature = -0.8) +
geom_curve(data=links_2,
aes(x = xstart, y = ystart, xend = xend, yend = yend), curvature = -0.8) -> p1
p1
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name, colour = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes")+
scale_colour_manual(values = p_ind) +
geom_curve(data=links_1,
aes(x = xstart, y = ystart, xend = xend, yend = yend), curvature = -0.8) +
geom_curve(data=links_2,
aes(x = xstart, y = ystart, xend = xend, yend = yend), curvature = 0.8) -> p1
ggsave(plot = p1, filename = "figs/edges_on_plot.png")
p1
cowplot::plot_grid(p1)
cowplot::plot_grid(p1, labels = "AUTO")
png("figs/my_graph.png", height = 1000, width = 1000, units = "px")
plot(graph, edge.width = 3, vertex.label.cex = 2, vertex.size=30)
dev.off()
cowplot::draw_image("figs/my_graph.png")
graph_1_cwpl <- ggdraw() + draw_image("to_delete_for_import.png")
ggdr
library(cowplot)
graph_1_cwpl <- ggdraw() + draw_image("figs/my_graph.png")
graph_1_cwpl
plot_grid(p1, graph_1_cwpl, labels = "AUTO")
plot(graph, edge.width = 4, vertex.label.cex = 2, vertex.size=30)
png("figs/my_graph.png", height = 1000, width = 1000, units = "px")
plot(graph, edge.width = 4, vertex.label.cex = 2, vertex.size=30)
dev.off()
graph_1_cwpl <- ggdraw() + draw_image("figs/my_graph.png")
plot_grid(p1, graph_1_cwpl, labels = "AUTO")
grid_plot <- plot_grid(p1, graph_1_cwpl, labels = "AUTO")
ggsave(plot = grid_plot, filename = "figs/graph_grid.png", width = 10, height = 5, units = "in")
ggsave(plot = grid_plot, filename = "figs/graph_grid.png", width = 11, height = 5, units = "in")
source("~/UCPH/thesis/methods_examples/graph_example.R", echo = TRUE)
tracts_gr <- GRanges(seqnames = "chr1", ranges = IRanges(start = c(50, 101), end = c(100, 150)))
library(GenomicRanges)
tracts_gr <- GRanges(seqnames = "chr1", ranges = IRanges(start = c(50, 101), end = c(100, 150)))
tracts_gr
reduce(tracts_gr)
tracts_gr <- GRanges(seqnames = "chr1", ranges = IRanges(start = c(50, 102), end = c(100, 150)))
reduce(tracts_gr)
?reduce
reduce(tracts_gr)
reduce(tracts_gr, min.gapwidth=10L)
tracts_gr <- GRanges(seqnames = "chr1", ranges = IRanges(start = c(50, 110), end = c(100, 150)))
reduce(tracts_gr, min.gapwidth=10L)
tracts_gr <- GRanges(seqnames = "chr1", ranges = IRanges(start = c(50, 111), end = c(100, 150)))
reduce(tracts_gr, min.gapwidth=10L)
library(GenomicRanges)
library(tidyverse)
library(plyranges)
source("utils.R")
if(!dir.exists("figs")) dir.create("figs")
# define tracts
tracts_gr <- GRanges(seqnames = "chr1", ranges = IRanges(start = c(100, 100, 130, 90, 90, 50), end = c(150, 150, 150, 170, 140, 80)))
mcols(tracts_gr)$name <- paste0("IND_", 1:length(tracts_gr))
mcols(tracts_gr)$col <- as.factor(c(1,1,2,3,4,5))
# tick_positions <- sort(unique(c(start(tracts_gr), end(tracts_gr))))
tracts_gr %>% as_tibble %>%
ggplot(aes(x = start, xend = end, y = name, yend = name, colour = col)) +
geom_segment(linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "position [bp]", y = "samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
# theme(panel.grid = element_blank()) +
guides(colour = "none")+
ggtitle("Example of introgressed tracts on chromosomes") -> p1
p1
# function to get the long df to plot
get_long_df <- function(bin_mat){
bin_long <- bin_mat %>% as.data.frame() %>% rownames_to_column(var = "name")%>%
pivot_longer(cols=-name,names_to = "bin", values_to = "value") %>% mutate(
fill_group = ifelse(value == 1, bin, "0"),
name = factor(name, levels = rev(unique(name)))  # To match tracts plot order
)
bin_long$bin <- factor(bin_long$bin, levels = colnames(bin_mat))
bin_long$name <- factor(bin_long$name, levels = rev(unique(tracts_gr$name)))
bin_long
}
bin_mat_sites <- t(get_bin_mat_sites(tracts_gr))
bin_sites_long <- get_long_df(bin_mat = bin_mat_sites)
plot_sites <- function(bin_mat_long){
tick_positions <- sort(unique(c(start(tracts_gr), end(tracts_gr))))
bin_levels <- unique(bin_mat_long$bin)
bin_colors <- setNames(RColorBrewer::brewer.pal(length(bin_levels), "Set1"), bin_levels)
bin_colors_0 <- c("0" = "white", bin_colors)
alpha_v <- c("0" = 1, setNames(rep(0.2, length(bin_levels)), bin_levels))
p2 <- ggplot(bin_mat_long) +
geom_tile(color = "grey80", aes(x = bin, y = name, fill = fill_group, alpha = fill_group)) +
scale_alpha_manual(values = alpha_v)+
geom_text(aes(x = bin, y = name, label = value), color = "black", size = 4) +
scale_fill_manual(values = bin_colors_0) +
labs(x = "Recombination breakpoints coordinates", y = NULL) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
panel.grid = element_blank()
)+ggtitle("Recombination breakpoints approach matrix")
tracts_gr %>% as_tibble %>%
ggplot() +
geom_segment(aes(x = start, xend = end, y = name, yend = name),linewidth = 3) + scale_y_discrete(limits=rev) +
labs(x = "Position [bp]", y = "Samples") +
coord_cartesian(xlim = c(0, 200)) +
# scale_x_continuous(breaks = tick_positions) +
theme(panel.grid = element_blank()) +
ggtitle("Example of introgressed tracts on chromosomes") +
geom_vline(xintercept = tick_positions, color=bin_colors, lty=2, alpha = 0.7) +
guides(fill = "none")-> p1
list(p1, p2)
}
p_sites <- plot_sites(bin_mat_long = bin_sites_long)
p_site_grid <- cowplot::plot_grid(plotlist = p_sites, labels = "AUTO")
p_site_grid
ggsave(plot = p_site_grid, filename = "figs/site_grid.png", width = 12, height = 5, units = "in")
